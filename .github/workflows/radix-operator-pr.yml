name: radix-operator-pr
on:
  pull_request:
    branches:
    - master
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: go mod download
      - name: Run Tests
        run: CGO_ENABLED=0 GOOS=linux go test `go list ./... | grep -v "pkg/client"` -timeout 2m

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Install dependencies
        run: go mod download
      - name: Install GolangCI Lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2
      - name: Install StaticCheck
        run: go install honnef.co/go/tools/cmd/staticcheck@2023.1.6

      - name: golangci-lint
        run: golangci-lint run --timeout=30m --new --max-same-issues=0 --out-format=github-actions

      # Add legacy checks since golangci-lint only tests changed files for now
      - name: StaticCheck
        run: staticcheck `go list ./... | grep -v "pkg/client"`
      - name: Go Vet
        run: go vet `go list ./... | grep -v "pkg/client"`

  build-operator:
    name: Build-operator
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build operator image
      env:
        REF: ${{ github. sha }}
        DOCKER_BUILDKIT: 1
      run: docker build -t radix-operator:${REF##*/} -f operator.Dockerfile .

  build-pipeline:
    name: Build-pipeline
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build pipeline image
      env:
        REF: ${{ github. sha }}
        DOCKER_BUILDKIT: 1
      run: docker build -t radix-operator:${REF##*/} -f pipeline.Dockerfile .
