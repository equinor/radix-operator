// Code generated by MockGen. DO NOT EDIT.
// Source: ./radix-operator/env/env.go

// Package env is a generated GoMock package.
package env

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEnv is a mock of Env interface.
type MockEnv struct {
	ctrl     *gomock.Controller
	recorder *MockEnvMockRecorder
}

// MockEnvMockRecorder is the mock recorder for MockEnv.
type MockEnvMockRecorder struct {
	mock *MockEnv
}

// NewMockEnv creates a new mock instance.
func NewMockEnv(ctrl *gomock.Controller) *MockEnv {
	mock := &MockEnv{ctrl: ctrl}
	mock.recorder = &MockEnvMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEnv) EXPECT() *MockEnvMockRecorder {
	return m.recorder
}

// GetLogLevel mocks base method.
func (m *MockEnv) GetLogLevel() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogLevel")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLogLevel indicates an expected call of GetLogLevel.
func (mr *MockEnvMockRecorder) GetLogLevel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogLevel", reflect.TypeOf((*MockEnv)(nil).GetLogLevel))
}
