// Code generated by MockGen. DO NOT EDIT.
// Source: ./radix-operator/config/config.go

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// GetDeploymentsHistoryLimitPerEnvironment mocks base method.
func (m *MockConfig) GetDeploymentsHistoryLimitPerEnvironment() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDeploymentsHistoryLimitPerEnvironment")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetDeploymentsHistoryLimitPerEnvironment indicates an expected call of GetDeploymentsHistoryLimitPerEnvironment.
func (mr *MockConfigMockRecorder) GetDeploymentsHistoryLimitPerEnvironment() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDeploymentsHistoryLimitPerEnvironment", reflect.TypeOf((*MockConfig)(nil).GetDeploymentsHistoryLimitPerEnvironment))
}

// GetJobsHistoryLimit mocks base method.
func (m *MockConfig) GetJobsHistoryLimit() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJobsHistoryLimit")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetJobsHistoryLimit indicates an expected call of GetJobsHistoryLimit.
func (mr *MockConfigMockRecorder) GetJobsHistoryLimit() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobsHistoryLimit", reflect.TypeOf((*MockConfig)(nil).GetJobsHistoryLimit))
}

// GetLogLevel mocks base method.
func (m *MockConfig) GetLogLevel() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLogLevel")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLogLevel indicates an expected call of GetLogLevel.
func (mr *MockConfigMockRecorder) GetLogLevel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLogLevel", reflect.TypeOf((*MockConfig)(nil).GetLogLevel))
}
