// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/apis/alert/alert.go

// Package alert is a generated GoMock package.
package alert

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAlertSyncer is a mock of AlertSyncer interface.
type MockAlertSyncer struct {
	ctrl     *gomock.Controller
	recorder *MockAlertSyncerMockRecorder
}

// MockAlertSyncerMockRecorder is the mock recorder for MockAlertSyncer.
type MockAlertSyncerMockRecorder struct {
	mock *MockAlertSyncer
}

// NewMockAlertSyncer creates a new mock instance.
func NewMockAlertSyncer(ctrl *gomock.Controller) *MockAlertSyncer {
	mock := &MockAlertSyncer{ctrl: ctrl}
	mock.recorder = &MockAlertSyncerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertSyncer) EXPECT() *MockAlertSyncerMockRecorder {
	return m.recorder
}

// OnSync mocks base method.
func (m *MockAlertSyncer) OnSync(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OnSync", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// OnSync indicates an expected call of OnSync.
func (mr *MockAlertSyncerMockRecorder) OnSync(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnSync", reflect.TypeOf((*MockAlertSyncer)(nil).OnSync), ctx)
}
