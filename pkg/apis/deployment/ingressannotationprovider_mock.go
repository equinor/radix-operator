// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/apis/deployment/ingressannotationprovider.go

// Package deployment is a generated GoMock package.
package deployment

import (
	reflect "reflect"

	v1 "github.com/equinor/radix-operator/pkg/apis/radix/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockIngressAnnotationProvider is a mock of IngressAnnotationProvider interface.
type MockIngressAnnotationProvider struct {
	ctrl     *gomock.Controller
	recorder *MockIngressAnnotationProviderMockRecorder
}

// MockIngressAnnotationProviderMockRecorder is the mock recorder for MockIngressAnnotationProvider.
type MockIngressAnnotationProviderMockRecorder struct {
	mock *MockIngressAnnotationProvider
}

// NewMockIngressAnnotationProvider creates a new mock instance.
func NewMockIngressAnnotationProvider(ctrl *gomock.Controller) *MockIngressAnnotationProvider {
	mock := &MockIngressAnnotationProvider{ctrl: ctrl}
	mock.recorder = &MockIngressAnnotationProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIngressAnnotationProvider) EXPECT() *MockIngressAnnotationProviderMockRecorder {
	return m.recorder
}

// GetAnnotations mocks base method.
func (m *MockIngressAnnotationProvider) GetAnnotations(component v1.RadixCommonDeployComponent) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnnotations", component)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAnnotations indicates an expected call of GetAnnotations.
func (mr *MockIngressAnnotationProviderMockRecorder) GetAnnotations(component interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnnotations", reflect.TypeOf((*MockIngressAnnotationProvider)(nil).GetAnnotations), component)
}
