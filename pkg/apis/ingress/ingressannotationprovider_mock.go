// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/apis/ingress/ingressannotationprovider.go

// Package ingress is a generated GoMock package.
package ingress

import (
	reflect "reflect"

	v1 "github.com/equinor/radix-operator/pkg/apis/radix/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockAnnotationProvider is a mock of AnnotationProvider interface.
type MockAnnotationProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAnnotationProviderMockRecorder
}

// MockAnnotationProviderMockRecorder is the mock recorder for MockAnnotationProvider.
type MockAnnotationProviderMockRecorder struct {
	mock *MockAnnotationProvider
}

// NewMockAnnotationProvider creates a new mock instance.
func NewMockAnnotationProvider(ctrl *gomock.Controller) *MockAnnotationProvider {
	mock := &MockAnnotationProvider{ctrl: ctrl}
	mock.recorder = &MockAnnotationProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnnotationProvider) EXPECT() *MockAnnotationProviderMockRecorder {
	return m.recorder
}

// GetAnnotations mocks base method.
func (m *MockAnnotationProvider) GetAnnotations(component v1.RadixCommonDeployComponent, namespace string) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnnotations", component, namespace)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAnnotations indicates an expected call of GetAnnotations.
func (mr *MockAnnotationProviderMockRecorder) GetAnnotations(component, namespace interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnnotations", reflect.TypeOf((*MockAnnotationProvider)(nil).GetAnnotations), component, namespace)
}
