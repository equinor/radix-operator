/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/statoil/radix-operator/pkg/apis/radix/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RadixRegistrationLister helps list RadixRegistrations.
type RadixRegistrationLister interface {
	// List lists all RadixRegistrations in the indexer.
	List(selector labels.Selector) (ret []*v1.RadixRegistration, err error)
	// RadixRegistrations returns an object that can list and get RadixRegistrations.
	RadixRegistrations(namespace string) RadixRegistrationNamespaceLister
	RadixRegistrationListerExpansion
}

// radixRegistrationLister implements the RadixRegistrationLister interface.
type radixRegistrationLister struct {
	indexer cache.Indexer
}

// NewRadixRegistrationLister returns a new RadixRegistrationLister.
func NewRadixRegistrationLister(indexer cache.Indexer) RadixRegistrationLister {
	return &radixRegistrationLister{indexer: indexer}
}

// List lists all RadixRegistrations in the indexer.
func (s *radixRegistrationLister) List(selector labels.Selector) (ret []*v1.RadixRegistration, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RadixRegistration))
	})
	return ret, err
}

// RadixRegistrations returns an object that can list and get RadixRegistrations.
func (s *radixRegistrationLister) RadixRegistrations(namespace string) RadixRegistrationNamespaceLister {
	return radixRegistrationNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RadixRegistrationNamespaceLister helps list and get RadixRegistrations.
type RadixRegistrationNamespaceLister interface {
	// List lists all RadixRegistrations in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.RadixRegistration, err error)
	// Get retrieves the RadixRegistration from the indexer for a given namespace and name.
	Get(name string) (*v1.RadixRegistration, error)
	RadixRegistrationNamespaceListerExpansion
}

// radixRegistrationNamespaceLister implements the RadixRegistrationNamespaceLister
// interface.
type radixRegistrationNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RadixRegistrations in the indexer for a given namespace.
func (s radixRegistrationNamespaceLister) List(selector labels.Selector) (ret []*v1.RadixRegistration, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RadixRegistration))
	})
	return ret, err
}

// Get retrieves the RadixRegistration from the indexer for a given namespace and name.
func (s radixRegistrationNamespaceLister) Get(name string) (*v1.RadixRegistration, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("radixregistration"), name)
	}
	return obj.(*v1.RadixRegistration), nil
}
