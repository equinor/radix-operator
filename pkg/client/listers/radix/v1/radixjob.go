/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/equinor/radix-operator/pkg/apis/radix/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RadixJobLister helps list RadixJobs.
type RadixJobLister interface {
	// List lists all RadixJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.RadixJob, err error)
	// RadixJobs returns an object that can list and get RadixJobs.
	RadixJobs(namespace string) RadixJobNamespaceLister
	RadixJobListerExpansion
}

// radixJobLister implements the RadixJobLister interface.
type radixJobLister struct {
	indexer cache.Indexer
}

// NewRadixJobLister returns a new RadixJobLister.
func NewRadixJobLister(indexer cache.Indexer) RadixJobLister {
	return &radixJobLister{indexer: indexer}
}

// List lists all RadixJobs in the indexer.
func (s *radixJobLister) List(selector labels.Selector) (ret []*v1.RadixJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RadixJob))
	})
	return ret, err
}

// RadixJobs returns an object that can list and get RadixJobs.
func (s *radixJobLister) RadixJobs(namespace string) RadixJobNamespaceLister {
	return radixJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RadixJobNamespaceLister helps list and get RadixJobs.
type RadixJobNamespaceLister interface {
	// List lists all RadixJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.RadixJob, err error)
	// Get retrieves the RadixJob from the indexer for a given namespace and name.
	Get(name string) (*v1.RadixJob, error)
	RadixJobNamespaceListerExpansion
}

// radixJobNamespaceLister implements the RadixJobNamespaceLister
// interface.
type radixJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RadixJobs in the indexer for a given namespace.
func (s radixJobNamespaceLister) List(selector labels.Selector) (ret []*v1.RadixJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.RadixJob))
	})
	return ret, err
}

// Get retrieves the RadixJob from the indexer for a given namespace and name.
func (s radixJobNamespaceLister) Get(name string) (*v1.RadixJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("radixjob"), name)
	}
	return obj.(*v1.RadixJob), nil
}
