---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: radixdeployments.radix.equinor.com
spec:
  group: radix.equinor.com
  names:
    kind: RadixDeployment
    listKind: RadixDeploymentList
    plural: radixdeployments
    singular: radixdeployment
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: RadixDeployment describe a deployment
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RadixDeploymentSpec is the spec for a deployment
            properties:
              appname:
                type: string
              components:
                items:
                  description: RadixDeployComponent defines a single component within
                    a RadixDeployment - maps to single deployment/service/ingress
                    etc
                  properties:
                    alwaysPullImageOnDeploy:
                      type: boolean
                    authentication:
                      description: Authentication describes authentication options.
                      properties:
                        clientCertificate:
                          description: 'Configuration for TLS client certificate authentication.
                            More info: https://www.radix.equinor.com/references/reference-radix-config/#clientcertificate'
                          properties:
                            passCertificateToUpstream:
                              description: Pass client certificate to backend in header
                                ssl-client-cert. This setting has no effect if verification
                                is set to off.
                              type: boolean
                            verification:
                              description: Defines how the client certificate shall
                                be verified.
                              enum:
                              - "on"
                              - "off"
                              - optional
                              - optional_no_ca
                              type: string
                          type: object
                        oauth2:
                          description: 'Configuration for OAuth2 authentication. More
                            info: https://www.radix.equinor.com/references/reference-radix-config/#oauth2'
                          properties:
                            clientId:
                              description: Client ID of the application.
                              type: string
                            cookie:
                              description: Session cookie settings.
                              properties:
                                expire:
                                  description: Defines the expire timeframe for the
                                    session cookie.
                                  type: string
                                name:
                                  description: Defines the name of the OAuth session
                                    cookie.
                                  type: string
                                refresh:
                                  description: The interval between cookie refreshes.
                                    The value must be a shorter timeframe than values
                                    set in Expire.
                                  type: string
                                sameSite:
                                  description: Defines the samesite cookie attribute
                                  enum:
                                  - strict
                                  - lax
                                  - none
                                  - ""
                                  type: string
                              type: object
                            cookieStore:
                              description: Settings for the cookie that stores session
                                data when SessionStoreType is cookie.
                              properties:
                                minimal:
                                  description: Strips OAuth tokens from cookies if
                                    they are not needed. Cookie.Refresh must be 0,
                                    and both SetXAuthRequestHeaders and SetAuthorizationHeader
                                    must be false if this setting is true.
                                  type: boolean
                              type: object
                            loginUrl:
                              description: Defines the authentication endpoint of
                                the identity provider. Must be set if OIDC.SkipDiscovery
                                is true
                              type: string
                            oidc:
                              description: OIDC settings.
                              properties:
                                insecureSkipVerifyNonce:
                                  description: Skip verifying the OIDC ID Token's
                                    nonce claim
                                  type: boolean
                                issuerUrl:
                                  description: Defines the OIDC issuer URL.
                                  type: string
                                jwksUrl:
                                  description: Defines the OIDC JWKS URL for token
                                    verification. Required if OIDC discovery is disabled.
                                  type: string
                                skipDiscovery:
                                  description: Defines if OIDC endpoint discovery
                                    should be bypassed. LoginURL, RedeemURL, JWKSURL
                                    must be configured if discovery is disabled.
                                  type: boolean
                              type: object
                            proxyPrefix:
                              description: Defines the url root path that OAuth Proxy
                                should be nested under.
                              type: string
                            redeemUrl:
                              description: Defines the endpoint to redeem the authorization
                                code received from the OAuth code flow. Must be set
                                if OIDC.SkipDiscovery is true
                              type: string
                            redisStore:
                              description: Settings for Redis store when SessionStoreType
                                is redis.
                              properties:
                                connectionUrl:
                                  description: Defines the URL for the Redis server.
                                  type: string
                              required:
                              - connectionUrl
                              type: object
                            scope:
                              description: Requested scopes.
                              type: string
                            sessionStoreType:
                              description: Defines where to store session data.
                              enum:
                              - cookie
                              - redis
                              type: string
                            setAuthorizationHeader:
                              description: Defines if the IDToken received by the
                                OAuth Proxy should be added to the Authorization header.
                              type: boolean
                            setXAuthRequestHeaders:
                              description: Defines if claims from the access token
                                is added to the X-Auth-Request-User, X-Auth-Request-Groups,
                                X-Auth-Request-Email and X-Auth-Request-Preferred-Username
                                request headers. The access token is passed in the
                                X-Auth-Request-Access-Token header.
                              type: boolean
                          type: object
                      type: object
                    dnsAppAlias:
                      type: boolean
                    dnsExternalAlias:
                      items:
                        type: string
                      type: array
                    environmentVariables:
                      additionalProperties:
                        type: string
                      description: 'Map of environment variables in the form ''<envvarname>:
                        <value>'''
                      type: object
                    horizontalScaling:
                      description: RadixHorizontalScaling defines configuration for
                        horizontal pod autoscaler. If set, this will override replicas
                        config
                      properties:
                        maxReplicas:
                          description: Defines the maximum number of replicas.
                          format: int32
                          minimum: 1
                          type: integer
                        minReplicas:
                          description: Defines the minimum number of replicas.
                          format: int32
                          minimum: 0
                          type: integer
                      required:
                      - maxReplicas
                      type: object
                    identity:
                      description: Identity configuration for federation with external
                        identity providers.
                      properties:
                        azure:
                          description: Azure identity configuration
                          properties:
                            clientId:
                              description: Defines the Client ID for a user defined
                                managed identity or application ID for an application
                                registration.
                              type: string
                          required:
                          - clientId
                          type: object
                      type: object
                    image:
                      type: string
                    ingressConfiguration:
                      items:
                        type: string
                      type: array
                    monitoring:
                      type: boolean
                    monitoringConfig:
                      description: MonitoringConfig Monitoring configuration
                      properties:
                        path:
                          description: Defines the path where metrics is served.
                          type: string
                        portName:
                          description: Defines which port in the ports list where
                            metrics is served.
                          maxLength: 15
                          pattern: ^(([a-z0-9][-a-z0-9.]*)?[a-z0-9])?$
                          type: string
                      type: object
                    name:
                      type: string
                    node:
                      description: RadixNode defines node attributes, where container
                        should be scheduled
                      properties:
                        gpu:
                          description: 'Defines rules for allowed GPU types. More
                            info: https://www.radix.equinor.com/references/reference-radix-config/#gpu'
                          minLength: 1
                          type: string
                        gpuCount:
                          description: Defines minimum number of required GPUs.
                          type: string
                      type: object
                    ports:
                      items:
                        description: ComponentPort defines a named port.
                        properties:
                          name:
                            description: Name of the port.
                            maxLength: 15
                            minLength: 1
                            pattern: ^(([a-z0-9][-a-z0-9.]*)?[a-z0-9])?$
                            type: string
                          port:
                            description: Port number.
                            format: int32
                            maximum: 65535
                            minimum: 1024
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                    public:
                      type: boolean
                    publicPort:
                      type: string
                    replicas:
                      type: integer
                    resources:
                      description: 'ResourceRequirements describes the compute resource
                        requirements. More info: https://www.radix.equinor.com/references/reference-radix-config/#resources-common'
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value.
                          type: object
                      type: object
                    secretRefs:
                      description: RadixSecretRefs defines secret vault
                      properties:
                        azureKeyVaults:
                          description: List of Azure keyvaults to get secrets from.
                          items:
                            description: RadixAzureKeyVault defines an Azure keyvault.
                            properties:
                              items:
                                description: List of keyvault items (secrets, keys
                                  and certificates).
                                items:
                                  description: 'RadixAzureKeyVaultItem defines Azure
                                    Key Vault setting: secrets, keys, certificates'
                                  properties:
                                    alias:
                                      description: Alias overrides the default file
                                        name used when mounting the secret, key or
                                        certificate.
                                      minLength: 1
                                      type: string
                                    encoding:
                                      description: Encoding defines the encoding of
                                        a keyvault item when stored in the container.
                                        Setting encoding to base64 and format to pfx
                                        will fetch and write the base64 decoded pfx
                                        binary.
                                      enum:
                                      - base64
                                      type: string
                                    envVar:
                                      description: Defines the name of the environment
                                        variable that will contain the value of the
                                        secret, key or certificate.
                                      type: string
                                    format:
                                      description: Defines the format of the keyvault
                                        item. pfx is only supported with type secret
                                        and PKCS12 or ECC certificate. Default format
                                        for certificates is pem.
                                      enum:
                                      - pem
                                      - pfx
                                      type: string
                                    k8sSecretType:
                                      description: 'K8sSecretType defines the type
                                        of Kubernetes secret the keyvault item will
                                        be stored in. opaque corresponds to "Opaque"
                                        and "kubernetes.io/tls" secret types: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types'
                                      enum:
                                      - opaque
                                      - tls
                                      type: string
                                    name:
                                      description: Name of a secret, key or certificate
                                        in the keyvault.
                                      maxLength: 127
                                      minLength: 1
                                      type: string
                                    type:
                                      description: Type of item in the keyvault referenced
                                        by the name.
                                      enum:
                                      - secret
                                      - key
                                      - cert
                                      type: string
                                    version:
                                      description: Defines that a specific version
                                        of a keyvault item should be loaded. The latest
                                        version is loaded when this field is not set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                              name:
                                description: Name of the Azure keyvault.
                                maxLength: 24
                                minLength: 3
                                type: string
                              path:
                                description: Path where secrets from the keyvault
                                  is mounted.
                                minLength: 1
                                type: string
                            required:
                            - items
                            - name
                            type: object
                          type: array
                      type: object
                    secrets:
                      items:
                        type: string
                      type: array
                    volumeMounts:
                      items:
                        description: RadixVolumeMount defines an external storage
                          resource.
                        properties:
                          accessMode:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            enum:
                            - ReadOnlyMany
                            - ReadWriteOnce
                            - ReadWriteMany
                            type: string
                          bindingMode:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            enum:
                            - Immediate
                            - WaitForFirstConsumer
                            type: string
                          container:
                            description: 'Deprecated. Only required by the deprecated
                              type: blob.'
                            type: string
                          gid:
                            description: GID defines the group ID (number) which will
                              be set as owner of the mounted volume.
                            type: string
                          name:
                            description: User-defined name of the volume mount. Must
                              be unique for the component.
                            minLength: 1
                            type: string
                          path:
                            description: Path defines in which directory the external
                              storage is mounted.
                            minLength: 1
                            type: string
                          requestsStorage:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            type: string
                          skuName:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            type: string
                          storage:
                            description: Storage defines the name of the container
                              in the external storage resource.
                            type: string
                          type:
                            description: Type defines the storage type. blob is deprecated,
                              use azure-blob instead.
                            enum:
                            - blob
                            - azure-blob
                            - azure-file
                            type: string
                          uid:
                            description: UID defines the user ID (number) which will
                              be set as owner of the mounted volume.
                            type: string
                        required:
                        - name
                        - path
                        - type
                        type: object
                      type: array
                  required:
                  - alwaysPullImageOnDeploy
                  - image
                  - monitoring
                  - name
                  - ports
                  - public
                  - replicas
                  type: object
                type: array
              environment:
                type: string
              imagePullSecrets:
                items:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              jobs:
                items:
                  description: RadixDeployJobComponent defines a single job component
                    within a RadixDeployment The job component is used by the radix-job-scheduler-server
                    to create Kubernetes Job objects
                  properties:
                    alwaysPullImageOnDeploy:
                      type: boolean
                    environment:
                      type: string
                    environmentVariables:
                      additionalProperties:
                        type: string
                      description: 'Map of environment variables in the form ''<envvarname>:
                        <value>'''
                      type: object
                    identity:
                      description: Identity configuration for federation with external
                        identity providers.
                      properties:
                        azure:
                          description: Azure identity configuration
                          properties:
                            clientId:
                              description: Defines the Client ID for a user defined
                                managed identity or application ID for an application
                                registration.
                              type: string
                          required:
                          - clientId
                          type: object
                      type: object
                    image:
                      type: string
                    monitoring:
                      type: boolean
                    monitoringConfig:
                      description: MonitoringConfig Monitoring configuration
                      properties:
                        path:
                          description: Defines the path where metrics is served.
                          type: string
                        portName:
                          description: Defines which port in the ports list where
                            metrics is served.
                          maxLength: 15
                          pattern: ^(([a-z0-9][-a-z0-9.]*)?[a-z0-9])?$
                          type: string
                      type: object
                    name:
                      type: string
                    node:
                      description: RadixNode defines node attributes, where container
                        should be scheduled
                      properties:
                        gpu:
                          description: 'Defines rules for allowed GPU types. More
                            info: https://www.radix.equinor.com/references/reference-radix-config/#gpu'
                          minLength: 1
                          type: string
                        gpuCount:
                          description: Defines minimum number of required GPUs.
                          type: string
                      type: object
                    notifications:
                      description: RadixNotifications is the spec for a notifying
                        about internal events or changes
                      properties:
                        webhook:
                          description: Webhook is a URL for notification about internal
                            events or changes. The URL should be of a Radix component
                            or job-component, with not public port.
                          maxLength: 253
                          minLength: 1
                          type: string
                      required:
                      - webhook
                      type: object
                    payload:
                      description: RadixJobComponentPayload defines the path and where
                        the payload received by radix-job-scheduler-server will be
                        mounted to the job container
                      properties:
                        path:
                          description: Path to the folder where payload is mounted
                          minLength: 1
                          type: string
                      required:
                      - path
                      type: object
                    ports:
                      items:
                        description: ComponentPort defines a named port.
                        properties:
                          name:
                            description: Name of the port.
                            maxLength: 15
                            minLength: 1
                            pattern: ^(([a-z0-9][-a-z0-9.]*)?[a-z0-9])?$
                            type: string
                          port:
                            description: Port number.
                            format: int32
                            maximum: 65535
                            minimum: 1024
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                    resources:
                      description: 'ResourceRequirements describes the compute resource
                        requirements. More info: https://www.radix.equinor.com/references/reference-radix-config/#resources-common'
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value.
                          type: object
                      type: object
                    schedulerPort:
                      format: int32
                      type: integer
                    secretRefs:
                      description: RadixSecretRefs defines secret vault
                      properties:
                        azureKeyVaults:
                          description: List of Azure keyvaults to get secrets from.
                          items:
                            description: RadixAzureKeyVault defines an Azure keyvault.
                            properties:
                              items:
                                description: List of keyvault items (secrets, keys
                                  and certificates).
                                items:
                                  description: 'RadixAzureKeyVaultItem defines Azure
                                    Key Vault setting: secrets, keys, certificates'
                                  properties:
                                    alias:
                                      description: Alias overrides the default file
                                        name used when mounting the secret, key or
                                        certificate.
                                      minLength: 1
                                      type: string
                                    encoding:
                                      description: Encoding defines the encoding of
                                        a keyvault item when stored in the container.
                                        Setting encoding to base64 and format to pfx
                                        will fetch and write the base64 decoded pfx
                                        binary.
                                      enum:
                                      - base64
                                      type: string
                                    envVar:
                                      description: Defines the name of the environment
                                        variable that will contain the value of the
                                        secret, key or certificate.
                                      type: string
                                    format:
                                      description: Defines the format of the keyvault
                                        item. pfx is only supported with type secret
                                        and PKCS12 or ECC certificate. Default format
                                        for certificates is pem.
                                      enum:
                                      - pem
                                      - pfx
                                      type: string
                                    k8sSecretType:
                                      description: 'K8sSecretType defines the type
                                        of Kubernetes secret the keyvault item will
                                        be stored in. opaque corresponds to "Opaque"
                                        and "kubernetes.io/tls" secret types: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types'
                                      enum:
                                      - opaque
                                      - tls
                                      type: string
                                    name:
                                      description: Name of a secret, key or certificate
                                        in the keyvault.
                                      maxLength: 127
                                      minLength: 1
                                      type: string
                                    type:
                                      description: Type of item in the keyvault referenced
                                        by the name.
                                      enum:
                                      - secret
                                      - key
                                      - cert
                                      type: string
                                    version:
                                      description: Defines that a specific version
                                        of a keyvault item should be loaded. The latest
                                        version is loaded when this field is not set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                              name:
                                description: Name of the Azure keyvault.
                                maxLength: 24
                                minLength: 3
                                type: string
                              path:
                                description: Path where secrets from the keyvault
                                  is mounted.
                                minLength: 1
                                type: string
                            required:
                            - items
                            - name
                            type: object
                          type: array
                      type: object
                    secrets:
                      items:
                        type: string
                      type: array
                    timeLimitSeconds:
                      format: int64
                      type: integer
                    volumeMounts:
                      items:
                        description: RadixVolumeMount defines an external storage
                          resource.
                        properties:
                          accessMode:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            enum:
                            - ReadOnlyMany
                            - ReadWriteOnce
                            - ReadWriteMany
                            type: string
                          bindingMode:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            enum:
                            - Immediate
                            - WaitForFirstConsumer
                            type: string
                          container:
                            description: 'Deprecated. Only required by the deprecated
                              type: blob.'
                            type: string
                          gid:
                            description: GID defines the group ID (number) which will
                              be set as owner of the mounted volume.
                            type: string
                          name:
                            description: User-defined name of the volume mount. Must
                              be unique for the component.
                            minLength: 1
                            type: string
                          path:
                            description: Path defines in which directory the external
                              storage is mounted.
                            minLength: 1
                            type: string
                          requestsStorage:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            type: string
                          skuName:
                            description: 'TODO: describe More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/'
                            type: string
                          storage:
                            description: Storage defines the name of the container
                              in the external storage resource.
                            type: string
                          type:
                            description: Type defines the storage type. blob is deprecated,
                              use azure-blob instead.
                            enum:
                            - blob
                            - azure-blob
                            - azure-file
                            type: string
                          uid:
                            description: UID defines the user ID (number) which will
                              be set as owner of the mounted volume.
                            type: string
                        required:
                        - name
                        - path
                        - type
                        type: object
                      type: array
                  required:
                  - alwaysPullImageOnDeploy
                  - environment
                  - image
                  - monitoring
                  - name
                  - ports
                  type: object
                type: array
            required:
            - appname
            - components
            - environment
            - imagePullSecrets
            - jobs
            type: object
          status:
            description: RadixDeployStatus is the status for a rd
            properties:
              activeFrom:
                format: date-time
                type: string
              activeTo:
                format: date-time
                type: string
              condition:
                description: RadixDeployCondition Holds the condition of a component
                type: string
              reconciled:
                format: date-time
                type: string
            required:
            - activeFrom
            - activeTo
            - condition
            - reconciled
            type: object
        required:
        - spec
        - status
        type: object
    served: true
    storage: true
