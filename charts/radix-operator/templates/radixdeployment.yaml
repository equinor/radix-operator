---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: radixdeployments.radix.equinor.com
spec:
  group: radix.equinor.com
  names:
    kind: RadixDeployment
    listKind: RadixDeploymentList
    plural: radixdeployments
    shortNames:
    - rd
    singular: radixdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.activeFrom
      name: Active From
      type: string
    - jsonPath: .status.activeTo
      name: Active To
      type: string
    - jsonPath: .status.condition
      name: Condition
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.reconciled
      name: Reconciled
      priority: 1
      type: date
    - jsonPath: .metadata.annotations.radix-branch
      name: Branch
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: RadixDeployment describe a deployment
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RadixDeploymentSpec is the spec for a deployment
            properties:
              appname:
                type: string
              components:
                items:
                  description: RadixDeployComponent defines a single component within
                    a RadixDeployment - maps to single deployment/service/ingress
                    etc
                  properties:
                    alwaysPullImageOnDeploy:
                      type: boolean
                    authentication:
                      description: Authentication describes authentication options.
                      properties:
                        clientCertificate:
                          description: |-
                            Configuration for TLS client certificate authentication.
                            More info: https://www.radix.equinor.com/radix-config#clientcertificate
                          properties:
                            passCertificateToUpstream:
                              description: |-
                                Pass client certificate to backend in header ssl-client-cert.
                                This setting has no effect if verification is set to off.
                              type: boolean
                            verification:
                              description: Defines how the client certificate shall
                                be verified.
                              enum:
                              - "on"
                              - "off"
                              - optional
                              - optional_no_ca
                              type: string
                          type: object
                        oauth2:
                          description: |-
                            Configuration for OAuth2 authentication.
                            More info: https://www.radix.equinor.com/radix-config#oauth2
                          properties:
                            clientId:
                              description: Client ID of the application.
                              type: string
                            cookie:
                              description: Session cookie settings.
                              properties:
                                expire:
                                  description: Defines the expire timeframe for the
                                    session cookie.
                                  type: string
                                name:
                                  description: Defines the name of the OAuth session
                                    cookie.
                                  type: string
                                refresh:
                                  description: |-
                                    The interval between cookie refreshes.
                                    The value must be a shorter timeframe than values set in Expire.
                                  type: string
                                sameSite:
                                  description: Defines the samesite cookie attribute
                                  enum:
                                  - strict
                                  - lax
                                  - none
                                  - ""
                                  type: string
                              type: object
                            cookieStore:
                              description: Settings for the cookie that stores session
                                data when SessionStoreType is cookie.
                              properties:
                                minimal:
                                  description: |-
                                    Strips OAuth tokens from cookies if they are not needed.
                                    Cookie.Refresh must be 0, and both SetXAuthRequestHeaders and SetAuthorizationHeader must be false if this setting is true.
                                  type: boolean
                              type: object
                            credentials:
                              default: secret
                              description: Credentials defines credentials type for
                                authenticating. Default is a Secret, which represents
                                a client secret.
                              enum:
                              - secret
                              - azureWorkloadIdentity
                              - ""
                              type: string
                            loginUrl:
                              description: |-
                                Defines the authentication endpoint of the identity provider.
                                Must be set if OIDC.SkipDiscovery is true
                              type: string
                            oidc:
                              description: OIDC settings.
                              properties:
                                insecureSkipVerifyNonce:
                                  description: Skip verifying the OIDC ID Token's
                                    nonce claim
                                  type: boolean
                                issuerUrl:
                                  description: Defines the OIDC issuer URL.
                                  type: string
                                jwksUrl:
                                  description: |-
                                    Defines the OIDC JWKS URL for token verification.
                                    Required if OIDC discovery is disabled.
                                  type: string
                                skipDiscovery:
                                  description: |-
                                    Defines if OIDC endpoint discovery should be bypassed.
                                    LoginURL, RedeemURL, JWKSURL must be configured if discovery is disabled.
                                  type: boolean
                              type: object
                            proxyPrefix:
                              description: Defines the url root path that OAuth Proxy
                                should be nested under.
                              type: string
                            redeemUrl:
                              description: |-
                                Defines the endpoint to redeem the authorization code received from the OAuth code flow.
                                Must be set if OIDC.SkipDiscovery is true
                              type: string
                            redisStore:
                              description: Settings for Redis store when SessionStoreType
                                is redis.
                              properties:
                                connectionUrl:
                                  description: Defines the URL for the Redis server.
                                  type: string
                              required:
                              - connectionUrl
                              type: object
                            scope:
                              description: Requested scopes.
                              type: string
                            sessionStoreType:
                              description: Defines where to store session data.
                              enum:
                              - cookie
                              - redis
                              - ""
                              type: string
                            setAuthorizationHeader:
                              description: Defines if the IDToken received by the
                                OAuth Proxy should be added to the Authorization header.
                              type: boolean
                            setXAuthRequestHeaders:
                              description: |-
                                Defines if claims from the access token is added to the X-Auth-Request-User, X-Auth-Request-Groups,
                                X-Auth-Request-Email and X-Auth-Request-Preferred-Username request headers.
                                The access token is passed in the X-Auth-Request-Access-Token header.
                              type: boolean
                          type: object
                      type: object
                    dnsAppAlias:
                      type: boolean
                    dnsExternalAlias:
                      description: 'Deprecated: For backward compatibility we must
                        still support this field. New code should use ExternalDNS
                        instead.'
                      items:
                        type: string
                      type: array
                    environmentVariables:
                      additionalProperties:
                        type: string
                      description: 'Map of environment variables in the form ''<envvarname>:
                        <value>'''
                      type: object
                    externalDNS:
                      items:
                        description: RadixDeployExternalDNS is the spec for an external
                          DNS alias
                        properties:
                          fqdn:
                            description: Fully qualified domain name (FQDN), e.g.
                              myapp.example.com.
                            maxLength: 255
                            minLength: 4
                            pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                            type: string
                          useCertificateAutomation:
                            default: false
                            description: Enable automatic issuing and renewal of TLS
                              certificate
                            type: boolean
                        required:
                        - fqdn
                        type: object
                      type: array
                    healthChecks:
                      properties:
                        livenessProbe:
                          description: |-
                            Periodic probe of container liveness.
                            Container will be restarted if the probe fails.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              default: 3
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded.
                              format: int32
                              minimum: 1
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  enum:
                                  - HTTPS
                                  - HTTP
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe.
                              format: int32
                              minimum: 1
                              type: integer
                            successThreshold:
                              default: 1
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Must be 1 for liveness and startup.
                              format: int32
                              minimum: 1
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              default: 1
                              description: |-
                                Number of seconds after which the probe times out.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              minimum: 1
                              type: integer
                          type: object
                        readinessProbe:
                          description: |-
                            Periodic probe of container service readiness.
                            Container will be removed from service endpoints if the probe fails.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                            Defaults to TCP Probe against the first listed port
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              default: 3
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded.
                              format: int32
                              minimum: 1
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  enum:
                                  - HTTPS
                                  - HTTP
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe.
                              format: int32
                              minimum: 1
                              type: integer
                            successThreshold:
                              default: 1
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Must be 1 for liveness and startup.
                              format: int32
                              minimum: 1
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              default: 1
                              description: |-
                                Number of seconds after which the probe times out.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              minimum: 1
                              type: integer
                          type: object
                        startupProbe:
                          description: |-
                            StartupProbe indicates that the Pod has successfully initialized.
                            If specified, no other probes are executed until this completes successfully.
                            If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
                            This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
                            when it might take a long time to load data or warm a cache, than during steady-state operation.
                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: |-
                                    Command is the command line to execute inside the container, the working directory for the
                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                    a shell, you need to explicitly call out to that shell.
                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            failureThreshold:
                              default: 3
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded.
                              format: int32
                              minimum: 1
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port.
                              properties:
                                port:
                                  description: Port number of the gRPC service.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                service:
                                  default: ""
                                  description: |-
                                    Service is the name of the service to place in the gRPC HealthCheckRequest
                                    (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                    If this is not specified, the default behavior is defined by gRPC.
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: |-
                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                    "Host" in httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: |-
                                          The header field name.
                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: |-
                                    Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  enum:
                                  - HTTPS
                                  - HTTP
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: |-
                                Number of seconds after the container has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              type: integer
                            periodSeconds:
                              default: 10
                              description: How often (in seconds) to perform the probe.
                              format: int32
                              minimum: 1
                              type: integer
                            successThreshold:
                              default: 1
                              description: |-
                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                Must be 1 for liveness and startup.
                              format: int32
                              minimum: 1
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  description: port number to access on the container.
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                              required:
                              - port
                              type: object
                            timeoutSeconds:
                              default: 1
                              description: |-
                                Number of seconds after which the probe times out.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                              format: int32
                              minimum: 1
                              type: integer
                          type: object
                      type: object
                    horizontalScaling:
                      description: RadixHorizontalScaling defines configuration for
                        horizontal pod autoscaler.
                      properties:
                        cooldownPeriod:
                          description: CooldownPeriod to wait after the last trigger
                            reported active before scaling the resource back to 0.
                            Defaults to 5min
                          format: int32
                          minimum: 15
                          type: integer
                        maxReplicas:
                          description: Defines the maximum number of replicas.
                          format: int32
                          minimum: 1
                          type: integer
                        minReplicas:
                          default: 1
                          description: Defines the minimum number of replicas.
                          format: int32
                          minimum: 0
                          type: integer
                        pollingInterval:
                          description: PollingInterval configures how often to check
                            each trigger on. Defaults to 30sec
                          format: int32
                          minimum: 15
                          type: integer
                        resources:
                          description: |-
                            Deprecated: Use CPU and/or Memory triggers instead
                            Defines the resource usage parameters for the horizontal pod autoscaler.
                          properties:
                            cpu:
                              description: Defines the CPU usage parameters for the
                                horizontal pod autoscaler.
                              properties:
                                averageUtilization:
                                  description: Defines the resource usage which triggers
                                    scaling for the horizontal pod autoscaler.
                                  format: int32
                                  minimum: 1
                                  type: integer
                              required:
                              - averageUtilization
                              type: object
                            memory:
                              description: Defines the memory usage parameters for
                                the horizontal pod autoscaler.
                              properties:
                                averageUtilization:
                                  description: Defines the resource usage which triggers
                                    scaling for the horizontal pod autoscaler.
                                  format: int32
                                  minimum: 1
                                  type: integer
                              required:
                              - averageUtilization
                              type: object
                          type: object
                        triggers:
                          description: Defines a list of triggers the component replicas
                            will scale on. Defaults to 80% CPU.
                          items:
                            description: RadixHorizontalScalingTrigger defines configuration
                              for a specific trigger.
                            maxProperties: 2
                            minProperties: 2
                            properties:
                              azureServiceBus:
                                description: AzureServiceBus defines a trigger that
                                  scales based on number of messages in queue
                                properties:
                                  activationMessageCount:
                                    description: 'ActivationMessageCount = Target
                                      value for activating the scaler. (Default: 0,
                                      Optional)'
                                    minimum: 0
                                    type: integer
                                  authentication:
                                    description: Azure Service Bus requires Workload
                                      Identity configured with a ClientID
                                    properties:
                                      identity:
                                        description: RadixHorizontalScalingRequiredIdentity
                                          configuration for federation with required
                                          azure identity providers.
                                        properties:
                                          azure:
                                            description: Azure identity configuration
                                            properties:
                                              clientId:
                                                description: Defines the Client ID
                                                  for a user defined managed identity
                                                  or application ID for an application
                                                  registration.
                                                type: string
                                            required:
                                            - clientId
                                            type: object
                                        required:
                                        - azure
                                        type: object
                                    required:
                                    - identity
                                    type: object
                                  messageCount:
                                    description: |-
                                      MessageCount  - Amount of active messages in your Azure Service Bus queue or topic to scale on. Defaults to 5 messages
                                      DesiredReplicas Number of replicas to which the resource has to be scaled between the start and end of the cron schedule.
                                    minimum: 1
                                    type: integer
                                  namespace:
                                    description: Namespace - Name of the Azure Service
                                      Bus namespace that contains your queue or topic.
                                      Required when using workload identity
                                    maxLength: 50
                                    minLength: 6
                                    pattern: ^(([a-z][-a-z0-9]*)?[a-z0-9])?$
                                    type: string
                                  queueName:
                                    description: QueueName selects the target queue.
                                      QueueName wil take precedence over TopicName.
                                    maxLength: 260
                                    minLength: 1
                                    pattern: ^(([a-z0-9][-_a-z0-9./]*)?[a-z0-9])?$
                                    type: string
                                  subscriptionName:
                                    description: SubscriptionName is required when
                                      TopicName is set.
                                    maxLength: 50
                                    minLength: 1
                                    pattern: ^(([a-z0-9][-_a-z0-9./]*)?[a-z0-9])?$
                                    type: string
                                  topicName:
                                    description: TopicName selectes the target topic,
                                      requires SubscriptionName to be set.
                                    maxLength: 260
                                    minLength: 1
                                    pattern: ^(([a-z0-9][-_a-z0-9./]*)?[a-z0-9])?$
                                    type: string
                                required:
                                - authentication
                                - namespace
                                type: object
                              cpu:
                                description: Cpu defines a trigger based on CPU usage
                                properties:
                                  value:
                                    description: Value - the target value is the average
                                      of the resource metric across all relevant pods,
                                      represented as a percentage of the requested
                                      value of the resource for the pods.
                                    minimum: 15
                                    type: integer
                                required:
                                - value
                                type: object
                              cron:
                                description: Cron defines a trigger that scales based
                                  on start and end times
                                properties:
                                  desiredReplicas:
                                    description: DesiredReplicas Number of replicas
                                      to which the resource has to be scaled between
                                      the start and end of the cron schedule.
                                    minimum: 1
                                    type: integer
                                  end:
                                    description: End is a Cron expression indicating
                                      the End of the cron schedule.
                                    pattern: ^((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*)
                                      ?){5})$
                                    type: string
                                  start:
                                    description: Start is a Cron expression indicating
                                      the start of the cron schedule.
                                    pattern: ^((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*)
                                      ?){5})$
                                    type: string
                                  timezone:
                                    description: Timezone One of the acceptable values
                                      from the IANA Time Zone Database. The list of
                                      timezones can be found at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
                                    type: string
                                required:
                                - desiredReplicas
                                - end
                                - start
                                - timezone
                                type: object
                              memory:
                                description: Memory defines a trigger based on memory
                                  usage
                                properties:
                                  value:
                                    description: Value - the target value is the average
                                      of the resource metric across all relevant pods,
                                      represented as a percentage of the requested
                                      value of the resource for the pods.
                                    minimum: 15
                                    type: integer
                                required:
                                - value
                                type: object
                              name:
                                description: Name of trigger, must be unique
                                maxLength: 50
                                minLength: 1
                                pattern: ^(([a-z0-9][-a-z0-9]*)?[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                      required:
                      - maxReplicas
                      type: object
                    identity:
                      description: Identity configuration for federation with external
                        identity providers.
                      properties:
                        azure:
                          description: Azure identity configuration
                          properties:
                            clientId:
                              description: Defines the Client ID for a user defined
                                managed identity or application ID for an application
                                registration.
                              type: string
                          required:
                          - clientId
                          type: object
                      type: object
                    image:
                      type: string
                    ingressConfiguration:
                      items:
                        type: string
                      type: array
                    monitoring:
                      type: boolean
                    monitoringConfig:
                      description: MonitoringConfig Monitoring configuration
                      properties:
                        path:
                          description: Defines the path where metrics is served.
                          type: string
                        portName:
                          description: Defines which port in the ports list where
                            metrics is served.
                          maxLength: 15
                          pattern: ^(([a-z0-9][-a-z0-9]*)?[a-z0-9])?$
                          type: string
                      type: object
                    name:
                      type: string
                    network:
                      description: |-
                        Network defines settings for network traffic.
                        Currently, only public ingress traffic is supported
                      properties:
                        ingress:
                          description: Ingress defines settings for ingress traffic.
                          properties:
                            public:
                              description: Public defines settings for public traffic.
                              properties:
                                allow:
                                  description: |-
                                    Allow defines a list of public IP addresses or CIDRs which are allowed to access the component.
                                    All IP addresses are allowed if this field is empty or not set.
                                  items:
                                    description: IP address or CIDR.
                                    pattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\/([0-9]|[1-2][0-9]|3[0-2]))?$
                                    type: string
                                  type: array
                                proxyBodySize:
                                  description: |-
                                    Sets the maximum allowed size of the client request body.
                                    Sizes can be specified in bytes, kilobytes (suffixes k and K), megabytes (suffixes m and M), or gigabytes (suffixes g and G) for example, "1024", "64k", "32m", "2g"
                                    If the size in a request exceeds the configured value, the 413 (Request Entity Too Large) error is returned to the client.
                                    Setting size to 0 disables checking of client request body size.
                                  pattern: ^(?:0|[1-9][0-9]*[kKmMgG]?)$
                                  type: string
                                proxyReadTimeout:
                                  description: |-
                                    Defines a timeout, in seconds, for reading a response from the proxied server.
                                    The timeout is set only between two successive read operations, not for the transmission of the whole response.
                                    If the proxied server does not transmit anything within this time, the connection is closed.
                                  minimum: 0
                                  type: integer
                                proxySendTimeout:
                                  description: |-
                                    Defines a timeout, in seconds, for transmitting a request to the proxied server.
                                    The timeout is set only between two successive write operations, not for the transmission of the whole request.
                                    If the proxied server does not receive anything within this time, the connection is closed.
                                  minimum: 0
                                  type: integer
                              type: object
                          type: object
                      type: object
                    node:
                      description: RadixNode defines node attributes, where container
                        should be scheduled
                      properties:
                        gpu:
                          description: |-
                            Defines rules for allowed GPU types.
                            More info: https://www.radix.equinor.com/radix-config#gpu
                          type: string
                        gpuCount:
                          description: Defines minimum number of required GPUs.
                          type: string
                      type: object
                    ports:
                      items:
                        description: ComponentPort defines a named port.
                        properties:
                          name:
                            description: Name of the port.
                            maxLength: 15
                            minLength: 1
                            pattern: ^(([a-z0-9][-a-z0-9]*)?[a-z0-9])?$
                            type: string
                          port:
                            description: Port number.
                            format: int32
                            maximum: 65535
                            minimum: 1024
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                    public:
                      description: 'Deprecated: For backwards compatibility Public
                        is still supported, new code should use PublicPort instead'
                      type: boolean
                    publicPort:
                      type: string
                    readOnlyFileSystem:
                      type: boolean
                    replicas:
                      type: integer
                    replicasOverride:
                      type: integer
                    resources:
                      description: |-
                        ResourceRequirements describes the compute resource requirements.
                        More info: https://www.radix.equinor.com/radix-config#resources-common
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if
                            that is explicitly specified, otherwise to an implementation-defined value.
                          type: object
                      type: object
                    runtime:
                      description: Runtime defines the component or job's target runtime
                        requirements
                      properties:
                        architecture:
                          default: amd64
                          description: CPU architecture target for the component or
                            job. Defaults to amd64.
                          enum:
                          - amd64
                          - arm64
                          type: string
                      type: object
                    secretRefs:
                      description: RadixSecretRefs defines secret vault
                      properties:
                        azureKeyVaults:
                          description: List of Azure Key Vaults to get secrets from.
                          items:
                            description: RadixAzureKeyVault defines an Azure keyvault.
                            properties:
                              items:
                                description: List of keyvault items (secrets, keys
                                  and certificates).
                                items:
                                  description: 'RadixAzureKeyVaultItem defines Azure
                                    Key Vault setting: secrets, keys, certificates'
                                  properties:
                                    alias:
                                      description: Alias overrides the default file
                                        name used when mounting the secret, key or
                                        certificate.
                                      minLength: 1
                                      type: string
                                    encoding:
                                      description: |-
                                        Encoding defines the encoding of a keyvault item when stored in the container.
                                        Setting encoding to base64 and format to pfx will fetch and write the base64 decoded pfx binary.
                                      enum:
                                      - base64
                                      type: string
                                    envVar:
                                      description: Defines the name of the environment
                                        variable that will contain the value of the
                                        secret, key or certificate.
                                      type: string
                                    format:
                                      description: |-
                                        Defines the format of the keyvault item.
                                        pfx is only supported with type secret and PKCS12 or ECC certificate.
                                        Default format for certificates is pem.
                                      enum:
                                      - pem
                                      - pfx
                                      type: string
                                    k8sSecretType:
                                      description: |-
                                        K8sSecretType defines the type of Kubernetes secret the keyvault item will be stored in.
                                        opaque corresponds to "Opaque" and "kubernetes.io/tls" secret types: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
                                      enum:
                                      - opaque
                                      - tls
                                      type: string
                                    name:
                                      description: Name of a secret, key or certificate
                                        in the keyvault.
                                      maxLength: 127
                                      minLength: 1
                                      type: string
                                    type:
                                      description: Type of item in the keyvault referenced
                                        by the name.
                                      enum:
                                      - secret
                                      - key
                                      - cert
                                      type: string
                                    version:
                                      description: |-
                                        Defines that a specific version of a keyvault item should be loaded.
                                        The latest version is loaded when this field is not set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                              name:
                                description: Name of the Azure keyvault.
                                maxLength: 24
                                minLength: 3
                                type: string
                              path:
                                description: Path where secrets from the keyvault
                                  is mounted.
                                minLength: 1
                                type: string
                              useAzureIdentity:
                                description: UseAzureIdentity defines that credentials
                                  for accessing Azure Key Vault will be acquired using
                                  Azure Workload Identity instead of using a ClientID
                                  and Secret.
                                type: boolean
                            required:
                            - items
                            - name
                            type: object
                          type: array
                      type: object
                    secrets:
                      items:
                        type: string
                      type: array
                    volumeMounts:
                      items:
                        description: RadixVolumeMount defines an external storage
                          resource.
                        properties:
                          accessMode:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Access mode from a container to an external storage. ReadOnlyMany (default), ReadWriteOnce, ReadWriteMany.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            enum:
                            - ReadOnlyMany
                            - ReadWriteOnce
                            - ReadWriteMany
                            - ""
                            type: string
                          bindingMode:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Binding mode from a container to an external storage. Immediate (default), WaitForFirstConsumer.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            enum:
                            - Immediate
                            - WaitForFirstConsumer
                            - ""
                            type: string
                          blobFuse2:
                            description: BlobFuse2 settings for Azure Storage FUSE
                              CSI driver with the protocol fuse2
                            properties:
                              accessMode:
                                description: |-
                                  Access mode from a container to an external storage. ReadOnlyMany (default), ReadWriteOnce, ReadWriteMany.
                                  More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                                enum:
                                - ReadOnlyMany
                                - ReadWriteOnce
                                - ReadWriteMany
                                - ""
                                type: string
                              attributeCache:
                                description: Configure attribute cache settings.
                                properties:
                                  timeout:
                                    description: The timeout for the attribute cache
                                      entries.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                type: object
                              bindingMode:
                                description: |-
                                  Binding mode from a container to an external storage. Immediate (default), WaitForFirstConsumer.
                                  More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                                enum:
                                - Immediate
                                - WaitForFirstConsumer
                                - ""
                                type: string
                              blockCache:
                                description: Configure block cache settings.
                                properties:
                                  blockSize:
                                    description: Size (in MB) of a block to be downloaded
                                      as a unit.
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  diskSize:
                                    description: |-
                                      Size (in MB) of total disk capacity that block cache can use.
                                      0 disables disk caching
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  diskTimeout:
                                    description: Timeout (in seconds) for which persisted
                                      data remains in disk cache.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  parallelism:
                                    description: Number of worker thread responsible
                                      for upload/download jobs.
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  poolSize:
                                    description: |-
                                      Size (in MB) of total memory preallocated for block-cache.
                                      Minimum value:
                                      - if prefetchCount is set: prefetchCount * blockSize
                                      - if prefetchCount is not set: blockSize
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  prefetchCount:
                                    description: |-
                                      Max number of blocks to prefetch. Prefetching is disabled by default.
                                      Value must be 0 (prefetcing disabled) or greater or equal to 11.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  prefetchOnOpen:
                                    description: Start prefetching on open or wait
                                      for first read.
                                    type: boolean
                                type: object
                              cacheMode:
                                description: |-
                                  Defines how files shoud be cached.

                                  File: Reads and caches the entire file
                                  Block: Blocks of fixed size are downloaded and cached
                                  DirectIO: Caching is disabled. All IO is passed directly to the storage account.
                                enum:
                                - File
                                - Block
                                - DirectIO
                                type: string
                              container:
                                description: Container. Name of the container in the
                                  external storage resource.
                                type: string
                              fileCache:
                                description: Configure file cache settings.
                                properties:
                                  timeout:
                                    description: The timeout for which file cache
                                      is valid.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                type: object
                              gid:
                                description: GID defines the group ID (number) which
                                  will be set as owner of the mounted volume.
                                type: string
                              protocol:
                                description: Holds protocols of BlobFuse2 Azure Storage
                                  FUSE driver. Default is fuse2.
                                enum:
                                - fuse2
                                - ""
                                type: string
                              requestsStorage:
                                description: |-
                                  Requested size (opens new window)of allocated mounted volume. Default value is set to "1Mi" (1 megabyte). Current version of the driver does not affect mounted volume size
                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolumeclaim
                                type: string
                              resourceGroup:
                                description: ResourceGroup of a storage account. Applicable
                                  when using a workload identity.
                                type: string
                              skuName:
                                description: |-
                                  SKU Type of Azure storage.
                                  More info: https://learn.microsoft.com/en-us/rest/api/storagerp/srp_sku_types
                                enum:
                                - Standard_LRS
                                - Premium_LRS
                                - Standard_GRS
                                - Standard_RAGRS
                                - ""
                                type: string
                              storageAccount:
                                description: Name of a storage account. It is mandatory
                                  when using a workload identity. It is optional when
                                  using Access Key, if it is not defined, it will
                                  be configured in a secret.
                                type: string
                              streaming:
                                description: |-
                                  Configure streaming settings.
                                  More info: https://github.com/Azure/azure-storage-fuse/blob/main/STREAMING.md
                                properties:
                                  blockSize:
                                    description: Optional. The size of each block
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  bufferSize:
                                    description: Optional. The size of each buffer
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  enabled:
                                    description: Enable streaming mode. Default true.
                                    type: boolean
                                  maxBlocksPerFile:
                                    description: Optional. The maximum number of blocks
                                      to be cached in memory.
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  maxBuffers:
                                    description: Optional. The total number of buffers
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  streamCache:
                                    description: Optional. Limit total amount of data
                                      being cached in memory to conserve memory footprint
                                      of blobfuse (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                type: object
                              subscriptionId:
                                description: SubscriptionId of a storage account.
                                  Applicable when using a workload identity.
                                type: string
                              tenantId:
                                description: TenantId of a storage account. Applicable
                                  when using a workload identity.
                                type: string
                              uid:
                                description: UID defines the user ID (number) which
                                  will be set as owner of the mounted volume.
                                type: string
                              useAdls:
                                description: |-
                                  Enables blobfuse to access Azure DataLake storage account. When set to false, blobfuse will access Azure Block Blob storage account, hierarchical file system is not supported.
                                  Default false. This must be turned on when HNS enabled account is mounted.
                                type: boolean
                              useAzureIdentity:
                                description: UseAzureIdentity defines that credentials
                                  for accessing Azure Storage will be acquired using
                                  Azure Workload Identity instead of using a ClientID
                                  and Secret.
                                type: boolean
                            required:
                            - container
                            type: object
                          container:
                            description: 'Deprecated: Only required by the deprecated
                              type: blob.'
                            type: string
                          emptyDir:
                            description: EmptyDir settings for EmptyDir volume
                            properties:
                              sizeLimit:
                                anyOf:
                                - type: integer
                                - type: string
                                description: SizeLimit defines the size of the emptyDir
                                  volume
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            required:
                            - sizeLimit
                            type: object
                          gid:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              GID defines the group ID (number) which will be set as owner of the mounted volume.
                            type: string
                          name:
                            description: |-
                              User-defined name of the volume mount.
                              Must be unique for the component.
                            maxLength: 40
                            minLength: 1
                            type: string
                          path:
                            description: Path defines in which directory the external
                              storage is mounted.
                            minLength: 1
                            type: string
                          requestsStorage:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            type: string
                          skuName:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            type: string
                          storage:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Storage defines the name of the container in the external storage resource.
                            type: string
                          type:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Type defines the storage type.
                            enum:
                            - azure-blob
                            - ""
                            type: string
                          uid:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              UID defines the user ID (number) which will be set as owner of the mounted volume.
                            type: string
                        required:
                        - name
                        - path
                        type: object
                      type: array
                  required:
                  - alwaysPullImageOnDeploy
                  - image
                  - monitoring
                  - name
                  - public
                  type: object
                type: array
              environment:
                type: string
              imagePullSecrets:
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              jobs:
                items:
                  description: |-
                    RadixDeployJobComponent defines a single job component within a RadixDeployment
                    The job component is used by the radix-job-scheduler to create Kubernetes Job objects
                  properties:
                    alwaysPullImageOnDeploy:
                      type: boolean
                    backoffLimit:
                      format: int32
                      type: integer
                    batchStatusRules:
                      description: BatchStatusRules Rules define how a batch status
                        is set corresponding to batch job statuses
                      items:
                        description: BatchStatusRule Rule how to set a batch status
                          by job statuses
                        properties:
                          batchStatus:
                            description: BatchStatus The status of the batch corresponding
                              to job statuses
                            enum:
                            - Running
                            - Succeeded
                            - Failed
                            - Waiting
                            - Stopping
                            - Stopped
                            - Active
                            - Completed
                            type: string
                          condition:
                            description: Condition of a rule
                            enum:
                            - All
                            - Any
                            type: string
                          jobStatuses:
                            description: JobStatuses Matching job statuses within
                              the rule
                            items:
                              description: RadixBatchJobPhase represents the phase
                                of the job
                              enum:
                              - Waiting
                              - Active
                              - Running
                              - Succeeded
                              - Failed
                              - Stopped
                              type: string
                            type: array
                          operator:
                            description: Operator of a rule
                            enum:
                            - In
                            - NotIn
                            type: string
                        required:
                        - batchStatus
                        - condition
                        - jobStatuses
                        - operator
                        type: object
                      type: array
                    environment:
                      type: string
                    environmentVariables:
                      additionalProperties:
                        type: string
                      description: 'Map of environment variables in the form ''<envvarname>:
                        <value>'''
                      type: object
                    failurePolicy:
                      description: FailurePolicy specifies the policy of handling
                        failed job replicas
                      properties:
                        rules:
                          description: |-
                            A list of failure policy rules. The rules are evaluated in order.
                            Once a rule matches a job replica failure, the remaining of the rules are ignored.
                            When no rule matches the failure, the default handling applies - the
                            counter of failures is incremented and it is checked against
                            the backoffLimit.
                          items:
                            description: RadixJobComponentFailurePolicyRule describes
                              how a job replica failure is handled when the onExitCodes
                              rules are met.
                            properties:
                              action:
                                description: Specifies the action taken on a job replica
                                  failure when the onExitCodes requirements are satisfied.
                                enum:
                                - FailJob
                                - Ignore
                                - Count
                                type: string
                              onExitCodes:
                                description: Represents the requirement on the job
                                  replica exit codes.
                                properties:
                                  operator:
                                    description: |-
                                      Represents the relationship between the job replica's exit code and the
                                      specified values. Replicas completed with success (exit code 0) are
                                      excluded from the requirement check.
                                    enum:
                                    - In
                                    - NotIn
                                    type: string
                                  values:
                                    description: |-
                                      Specifies the set of values. The job replica's exit code is checked against this set of
                                      values with respect to the operator. The list must not contain duplicates.
                                      Value '0' cannot be used for the In operator.
                                    items:
                                      format: int32
                                      minimum: 0
                                      type: integer
                                    maxItems: 255
                                    minItems: 1
                                    type: array
                                    x-kubernetes-list-type: set
                                required:
                                - operator
                                - values
                                type: object
                            required:
                            - action
                            - onExitCodes
                            type: object
                          maxItems: 20
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - rules
                      type: object
                    identity:
                      description: Identity configuration for federation with external
                        identity providers.
                      properties:
                        azure:
                          description: Azure identity configuration
                          properties:
                            clientId:
                              description: Defines the Client ID for a user defined
                                managed identity or application ID for an application
                                registration.
                              type: string
                          required:
                          - clientId
                          type: object
                      type: object
                    image:
                      type: string
                    monitoring:
                      type: boolean
                    monitoringConfig:
                      description: MonitoringConfig Monitoring configuration
                      properties:
                        path:
                          description: Defines the path where metrics is served.
                          type: string
                        portName:
                          description: Defines which port in the ports list where
                            metrics is served.
                          maxLength: 15
                          pattern: ^(([a-z0-9][-a-z0-9]*)?[a-z0-9])?$
                          type: string
                      type: object
                    name:
                      type: string
                    node:
                      description: RadixNode defines node attributes, where container
                        should be scheduled
                      properties:
                        gpu:
                          description: |-
                            Defines rules for allowed GPU types.
                            More info: https://www.radix.equinor.com/radix-config#gpu
                          type: string
                        gpuCount:
                          description: Defines minimum number of required GPUs.
                          type: string
                      type: object
                    notifications:
                      description: Notifications is the spec for notification about
                        internal events or changes
                      properties:
                        webhook:
                          description: Webhook is a URL for notification about internal
                            events or changes. The URL should be of a Radix component
                            or job-component, with not public port.
                          maxLength: 253
                          minLength: 1
                          type: string
                      type: object
                    payload:
                      description: |-
                        RadixJobComponentPayload defines the path and where the payload received
                        by radix-job-scheduler will be mounted to the job container
                      properties:
                        path:
                          description: Path to the folder where payload is mounted
                          minLength: 1
                          type: string
                      required:
                      - path
                      type: object
                    ports:
                      items:
                        description: ComponentPort defines a named port.
                        properties:
                          name:
                            description: Name of the port.
                            maxLength: 15
                            minLength: 1
                            pattern: ^(([a-z0-9][-a-z0-9]*)?[a-z0-9])?$
                            type: string
                          port:
                            description: Port number.
                            format: int32
                            maximum: 65535
                            minimum: 1024
                            type: integer
                        required:
                        - name
                        - port
                        type: object
                      type: array
                    readOnlyFileSystem:
                      type: boolean
                    resources:
                      description: |-
                        ResourceRequirements describes the compute resource requirements.
                        More info: https://www.radix.equinor.com/radix-config#resources-common
                      properties:
                        limits:
                          additionalProperties:
                            type: string
                          description: Limits describes the maximum amount of compute
                            resources allowed.
                          type: object
                        requests:
                          additionalProperties:
                            type: string
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if
                            that is explicitly specified, otherwise to an implementation-defined value.
                          type: object
                      type: object
                    runtime:
                      description: Runtime defines the component or job's target runtime
                        requirements
                      properties:
                        architecture:
                          default: amd64
                          description: CPU architecture target for the component or
                            job. Defaults to amd64.
                          enum:
                          - amd64
                          - arm64
                          type: string
                      type: object
                    schedulerPort:
                      format: int32
                      type: integer
                    secretRefs:
                      description: RadixSecretRefs defines secret vault
                      properties:
                        azureKeyVaults:
                          description: List of Azure Key Vaults to get secrets from.
                          items:
                            description: RadixAzureKeyVault defines an Azure keyvault.
                            properties:
                              items:
                                description: List of keyvault items (secrets, keys
                                  and certificates).
                                items:
                                  description: 'RadixAzureKeyVaultItem defines Azure
                                    Key Vault setting: secrets, keys, certificates'
                                  properties:
                                    alias:
                                      description: Alias overrides the default file
                                        name used when mounting the secret, key or
                                        certificate.
                                      minLength: 1
                                      type: string
                                    encoding:
                                      description: |-
                                        Encoding defines the encoding of a keyvault item when stored in the container.
                                        Setting encoding to base64 and format to pfx will fetch and write the base64 decoded pfx binary.
                                      enum:
                                      - base64
                                      type: string
                                    envVar:
                                      description: Defines the name of the environment
                                        variable that will contain the value of the
                                        secret, key or certificate.
                                      type: string
                                    format:
                                      description: |-
                                        Defines the format of the keyvault item.
                                        pfx is only supported with type secret and PKCS12 or ECC certificate.
                                        Default format for certificates is pem.
                                      enum:
                                      - pem
                                      - pfx
                                      type: string
                                    k8sSecretType:
                                      description: |-
                                        K8sSecretType defines the type of Kubernetes secret the keyvault item will be stored in.
                                        opaque corresponds to "Opaque" and "kubernetes.io/tls" secret types: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
                                      enum:
                                      - opaque
                                      - tls
                                      type: string
                                    name:
                                      description: Name of a secret, key or certificate
                                        in the keyvault.
                                      maxLength: 127
                                      minLength: 1
                                      type: string
                                    type:
                                      description: Type of item in the keyvault referenced
                                        by the name.
                                      enum:
                                      - secret
                                      - key
                                      - cert
                                      type: string
                                    version:
                                      description: |-
                                        Defines that a specific version of a keyvault item should be loaded.
                                        The latest version is loaded when this field is not set.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                              name:
                                description: Name of the Azure keyvault.
                                maxLength: 24
                                minLength: 3
                                type: string
                              path:
                                description: Path where secrets from the keyvault
                                  is mounted.
                                minLength: 1
                                type: string
                              useAzureIdentity:
                                description: UseAzureIdentity defines that credentials
                                  for accessing Azure Key Vault will be acquired using
                                  Azure Workload Identity instead of using a ClientID
                                  and Secret.
                                type: boolean
                            required:
                            - items
                            - name
                            type: object
                          type: array
                      type: object
                    secrets:
                      items:
                        type: string
                      type: array
                    timeLimitSeconds:
                      format: int64
                      type: integer
                    volumeMounts:
                      items:
                        description: RadixVolumeMount defines an external storage
                          resource.
                        properties:
                          accessMode:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Access mode from a container to an external storage. ReadOnlyMany (default), ReadWriteOnce, ReadWriteMany.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            enum:
                            - ReadOnlyMany
                            - ReadWriteOnce
                            - ReadWriteMany
                            - ""
                            type: string
                          bindingMode:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Binding mode from a container to an external storage. Immediate (default), WaitForFirstConsumer.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            enum:
                            - Immediate
                            - WaitForFirstConsumer
                            - ""
                            type: string
                          blobFuse2:
                            description: BlobFuse2 settings for Azure Storage FUSE
                              CSI driver with the protocol fuse2
                            properties:
                              accessMode:
                                description: |-
                                  Access mode from a container to an external storage. ReadOnlyMany (default), ReadWriteOnce, ReadWriteMany.
                                  More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                                enum:
                                - ReadOnlyMany
                                - ReadWriteOnce
                                - ReadWriteMany
                                - ""
                                type: string
                              attributeCache:
                                description: Configure attribute cache settings.
                                properties:
                                  timeout:
                                    description: The timeout for the attribute cache
                                      entries.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                type: object
                              bindingMode:
                                description: |-
                                  Binding mode from a container to an external storage. Immediate (default), WaitForFirstConsumer.
                                  More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                                enum:
                                - Immediate
                                - WaitForFirstConsumer
                                - ""
                                type: string
                              blockCache:
                                description: Configure block cache settings.
                                properties:
                                  blockSize:
                                    description: Size (in MB) of a block to be downloaded
                                      as a unit.
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  diskSize:
                                    description: |-
                                      Size (in MB) of total disk capacity that block cache can use.
                                      0 disables disk caching
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  diskTimeout:
                                    description: Timeout (in seconds) for which persisted
                                      data remains in disk cache.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  parallelism:
                                    description: Number of worker thread responsible
                                      for upload/download jobs.
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  poolSize:
                                    description: |-
                                      Size (in MB) of total memory preallocated for block-cache.
                                      Minimum value:
                                      - if prefetchCount is set: prefetchCount * blockSize
                                      - if prefetchCount is not set: blockSize
                                    format: int32
                                    minimum: 1
                                    type: integer
                                  prefetchCount:
                                    description: |-
                                      Max number of blocks to prefetch. Prefetching is disabled by default.
                                      Value must be 0 (prefetcing disabled) or greater or equal to 11.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                  prefetchOnOpen:
                                    description: Start prefetching on open or wait
                                      for first read.
                                    type: boolean
                                type: object
                              cacheMode:
                                description: |-
                                  Defines how files shoud be cached.

                                  File: Reads and caches the entire file
                                  Block: Blocks of fixed size are downloaded and cached
                                  DirectIO: Caching is disabled. All IO is passed directly to the storage account.
                                enum:
                                - File
                                - Block
                                - DirectIO
                                type: string
                              container:
                                description: Container. Name of the container in the
                                  external storage resource.
                                type: string
                              fileCache:
                                description: Configure file cache settings.
                                properties:
                                  timeout:
                                    description: The timeout for which file cache
                                      is valid.
                                    format: int32
                                    minimum: 0
                                    type: integer
                                type: object
                              gid:
                                description: GID defines the group ID (number) which
                                  will be set as owner of the mounted volume.
                                type: string
                              protocol:
                                description: Holds protocols of BlobFuse2 Azure Storage
                                  FUSE driver. Default is fuse2.
                                enum:
                                - fuse2
                                - ""
                                type: string
                              requestsStorage:
                                description: |-
                                  Requested size (opens new window)of allocated mounted volume. Default value is set to "1Mi" (1 megabyte). Current version of the driver does not affect mounted volume size
                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolumeclaim
                                type: string
                              resourceGroup:
                                description: ResourceGroup of a storage account. Applicable
                                  when using a workload identity.
                                type: string
                              skuName:
                                description: |-
                                  SKU Type of Azure storage.
                                  More info: https://learn.microsoft.com/en-us/rest/api/storagerp/srp_sku_types
                                enum:
                                - Standard_LRS
                                - Premium_LRS
                                - Standard_GRS
                                - Standard_RAGRS
                                - ""
                                type: string
                              storageAccount:
                                description: Name of a storage account. It is mandatory
                                  when using a workload identity. It is optional when
                                  using Access Key, if it is not defined, it will
                                  be configured in a secret.
                                type: string
                              streaming:
                                description: |-
                                  Configure streaming settings.
                                  More info: https://github.com/Azure/azure-storage-fuse/blob/main/STREAMING.md
                                properties:
                                  blockSize:
                                    description: Optional. The size of each block
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  bufferSize:
                                    description: Optional. The size of each buffer
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  enabled:
                                    description: Enable streaming mode. Default true.
                                    type: boolean
                                  maxBlocksPerFile:
                                    description: Optional. The maximum number of blocks
                                      to be cached in memory.
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  maxBuffers:
                                    description: Optional. The total number of buffers
                                      to be cached in memory (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                  streamCache:
                                    description: Optional. Limit total amount of data
                                      being cached in memory to conserve memory footprint
                                      of blobfuse (in MB).
                                    format: int64
                                    minimum: 1
                                    type: integer
                                type: object
                              subscriptionId:
                                description: SubscriptionId of a storage account.
                                  Applicable when using a workload identity.
                                type: string
                              tenantId:
                                description: TenantId of a storage account. Applicable
                                  when using a workload identity.
                                type: string
                              uid:
                                description: UID defines the user ID (number) which
                                  will be set as owner of the mounted volume.
                                type: string
                              useAdls:
                                description: |-
                                  Enables blobfuse to access Azure DataLake storage account. When set to false, blobfuse will access Azure Block Blob storage account, hierarchical file system is not supported.
                                  Default false. This must be turned on when HNS enabled account is mounted.
                                type: boolean
                              useAzureIdentity:
                                description: UseAzureIdentity defines that credentials
                                  for accessing Azure Storage will be acquired using
                                  Azure Workload Identity instead of using a ClientID
                                  and Secret.
                                type: boolean
                            required:
                            - container
                            type: object
                          container:
                            description: 'Deprecated: Only required by the deprecated
                              type: blob.'
                            type: string
                          emptyDir:
                            description: EmptyDir settings for EmptyDir volume
                            properties:
                              sizeLimit:
                                anyOf:
                                - type: integer
                                - type: string
                                description: SizeLimit defines the size of the emptyDir
                                  volume
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            required:
                            - sizeLimit
                            type: object
                          gid:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              GID defines the group ID (number) which will be set as owner of the mounted volume.
                            type: string
                          name:
                            description: |-
                              User-defined name of the volume mount.
                              Must be unique for the component.
                            maxLength: 40
                            minLength: 1
                            type: string
                          path:
                            description: Path defines in which directory the external
                              storage is mounted.
                            minLength: 1
                            type: string
                          requestsStorage:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            type: string
                          skuName:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              More info: https://www.radix.equinor.com/guides/volume-mounts/optional-settings/
                            type: string
                          storage:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Storage defines the name of the container in the external storage resource.
                            type: string
                          type:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              Type defines the storage type.
                            enum:
                            - azure-blob
                            - ""
                            type: string
                          uid:
                            description: |-
                              Deprecated: use BlobFuse2 instead.
                              UID defines the user ID (number) which will be set as owner of the mounted volume.
                            type: string
                        required:
                        - name
                        - path
                        type: object
                      type: array
                  required:
                  - alwaysPullImageOnDeploy
                  - environment
                  - image
                  - monitoring
                  - name
                  type: object
                type: array
            required:
            - appname
            - environment
            type: object
          status:
            description: RadixDeployStatus is the status for a rd
            properties:
              activeFrom:
                format: date-time
                type: string
              activeTo:
                format: date-time
                type: string
              condition:
                description: RadixDeployCondition Holds the condition of a component
                type: string
              reconciled:
                format: date-time
                type: string
            required:
            - activeFrom
            - condition
            type: object
        required:
        - metadata
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
